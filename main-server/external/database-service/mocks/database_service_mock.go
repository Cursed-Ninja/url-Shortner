// Code generated by MockGen. DO NOT EDIT.
// Source: D:\Programming\Go\url-shortner\main-server\database-service\database-service.go

// Package mock_databaseservice is a generated GoMock package.
package mock_databaseservice

import (
	io "io"
	models "main-server/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDatabaseServiceInterface is a mock of DatabaseServiceInterface interface.
type MockDatabaseServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDatabaseServiceInterfaceMockRecorder
}

// MockDatabaseServiceInterfaceMockRecorder is the mock recorder for MockDatabaseServiceInterface.
type MockDatabaseServiceInterfaceMockRecorder struct {
	mock *MockDatabaseServiceInterface
}

// NewMockDatabaseServiceInterface creates a new mock instance.
func NewMockDatabaseServiceInterface(ctrl *gomock.Controller) *MockDatabaseServiceInterface {
	mock := &MockDatabaseServiceInterface{ctrl: ctrl}
	mock.recorder = &MockDatabaseServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDatabaseServiceInterface) EXPECT() *MockDatabaseServiceInterfaceMockRecorder {
	return m.recorder
}

// HandleRedirect mocks base method.
func (m *MockDatabaseServiceInterface) HandleRedirect(body io.Reader, requestId string) (*models.RedirectResponseModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleRedirect", body, requestId)
	ret0, _ := ret[0].(*models.RedirectResponseModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HandleRedirect indicates an expected call of HandleRedirect.
func (mr *MockDatabaseServiceInterfaceMockRecorder) HandleRedirect(body, requestId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleRedirect", reflect.TypeOf((*MockDatabaseServiceInterface)(nil).HandleRedirect), body, requestId)
}

// HandleShorten mocks base method.
func (m *MockDatabaseServiceInterface) HandleShorten(body io.Reader, requestId string) (*models.ShortenResponseModel, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleShorten", body, requestId)
	ret0, _ := ret[0].(*models.ShortenResponseModel)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HandleShorten indicates an expected call of HandleShorten.
func (mr *MockDatabaseServiceInterfaceMockRecorder) HandleShorten(body, requestId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleShorten", reflect.TypeOf((*MockDatabaseServiceInterface)(nil).HandleShorten), body, requestId)
}
